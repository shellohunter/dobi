From e2453b63cf37b68488bceb571d494490e2193dce Mon Sep 17 00:00:00 2001
From: Hua Shao <nossiac@163.com>
Date: Fri, 10 Aug 2018 11:40:10 +0800
Subject: [PATCH 1/1] +1

---
 CMakeLists.txt |  7 +++----
 src/http.c     |  2 ++
 src/server.c   | 10 ++++++++++
 src/server.h   |  2 ++
 4 files changed, 17 insertions(+), 4 deletions(-)
 mode change 100644 => 100755 src/http.c
 mode change 100644 => 100755 src/server.c
 mode change 100644 => 100755 src/server.h

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8e00482..d8fb91c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -16,7 +16,6 @@ endif()
 set(LIBWEBSOCKETS_MIN_VERSION 1.7.0)
 set(SOURCE_FILES src/server.c src/http.c src/protocol.c src/utils.c)
 
-find_package(OpenSSL REQUIRED)
 find_package(Libwebsockets ${LIBWEBSOCKETS_MIN_VERSION} QUIET)
 
 find_package(PkgConfig)
@@ -53,8 +52,8 @@ add_custom_command(OUTPUT html.h
         COMMENT "Generating html.h from index.html")
 list(APPEND SOURCE_FILES html.h)
 
-set(INCLUDE_DIRS ${OPENSSL_INCLUDE_DIR} ${LIBWEBSOCKETS_INCLUDE_DIR} ${JSON-C_INCLUDE_DIR})
-set(LINK_LIBS util pthread ${OPENSSL_LIBRARIES} ${LIBWEBSOCKETS_LIBRARIES} ${JSON-C_LIBRARY})
+set(INCLUDE_DIRS ${LIBWEBSOCKETS_INCLUDE_DIR} ${JSON-C_INCLUDE_DIR})
+set(LINK_LIBS util pthread ${LIBWEBSOCKETS_LIBRARIES} ${JSON-C_LIBRARY})
 
 if(WIN32)
     list(APPEND LINK_LIBS shell32)
@@ -80,6 +79,6 @@ set(CPACK_GENERATOR "DEB")
 SET(CPACK_DEBIAN_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
 set(CPACK_DEBIAN_PACKAGE_SECTION "shells")
 set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "https://tsl0922.github.io/ttyd")
-set(CPACK_DEBIAN_PACKAGE_DEPENDS "libjson-c2, libwebsockets7, libssl1.0.0, libc6 (>= 2.14)")
+set(CPACK_DEBIAN_PACKAGE_DEPENDS "libjson-c2, libwebsockets7, libc6 (>= 2.14)")
 
 include(CPack)
diff --git a/src/http.c b/src/http.c
old mode 100644
new mode 100755
index d569ce9..c6fa62e
--- a/src/http.c
+++ b/src/http.c
@@ -125,6 +125,7 @@ callback_http(struct lws *wsi, enum lws_callback_reasons reason, void *user, voi
                 goto try_to_reuse;
             }
             break;
+#ifdef SSL_SUPPORT
         case LWS_CALLBACK_OPENSSL_PERFORM_CLIENT_CERT_VERIFICATION:
             if (!len || (SSL_get_verify_result((SSL *) in) != X509_V_OK)) {
                 int err = X509_STORE_CTX_get_error((X509_STORE_CTX *) user);
@@ -134,6 +135,7 @@ callback_http(struct lws *wsi, enum lws_callback_reasons reason, void *user, voi
                 return 1;
             }
             break;
+#endif
         default:
             break;
     }
diff --git a/src/server.c b/src/server.c
old mode 100644
new mode 100755
index a16bab0..5a6019e
--- a/src/server.c
+++ b/src/server.c
@@ -29,10 +29,12 @@ static const struct option options[] = {
         {"signal-list",  no_argument,       NULL,  1},
         {"reconnect",    required_argument, NULL, 'r'},
         {"index",        required_argument, NULL, 'I'},
+#ifdef SSL_SUPPORT
         {"ssl",          no_argument,       NULL, 'S'},
         {"ssl-cert",     required_argument, NULL, 'C'},
         {"ssl-key",      required_argument, NULL, 'K'},
         {"ssl-ca",       required_argument, NULL, 'A'},
+#endif
         {"readonly",     no_argument,       NULL, 'R'},
         {"check-origin", no_argument,       NULL, 'O'},
         {"max-clients",  required_argument, NULL, 'm'},
@@ -66,10 +68,12 @@ void print_help() {
                     "    -o, --once              Accept only one client and exit on disconnection\n"
                     "    -B, --browser           Open terminal with the default system browser\n"
                     "    -I, --index             Custom index.html path\n"
+#ifdef SSL_SUPPORT
                     "    -S, --ssl               Enable SSL\n"
                     "    -C, --ssl-cert          SSL certificate file path\n"
                     "    -K, --ssl-key           SSL key file path\n"
                     "    -A, --ssl-ca            SSL CA file path for client certificate verification\n"
+#endif
                     "    -d, --debug             Set log level (default: 7)\n"
                     "    -v, --version           Print the version and exit\n"
                     "    -h, --help              Print this text and exit\n\n"
@@ -211,8 +215,10 @@ main(int argc, char **argv) {
     info.port = 7681;
     info.iface = NULL;
     info.protocols = protocols;
+#ifdef SSL_SUPPORT
     info.ssl_cert_filepath = NULL;
     info.ssl_private_key_filepath = NULL;
+#endif
     info.gid = -1;
     info.uid = -1;
     info.max_http_header_pool = 16;
@@ -317,6 +323,7 @@ main(int argc, char **argv) {
                     return -1;
                 }
                 break;
+#ifdef SSL_SUPPORT
             case 'S':
                 ssl = true;
                 break;
@@ -324,6 +331,7 @@ main(int argc, char **argv) {
                 strncpy(cert_path, optarg, sizeof(cert_path) - 1);
                 cert_path[sizeof(cert_path) - 1] = '\0';
                 break;
+#endif
             case 'K':
                 strncpy(key_path, optarg, sizeof(key_path) - 1);
                 key_path[sizeof(key_path) - 1] = '\0';
@@ -386,6 +394,7 @@ main(int argc, char **argv) {
         }
     }
 
+#ifdef SSL_SUPPORT
     if (ssl) {
         info.ssl_cert_filepath = cert_path;
         info.ssl_private_key_filepath = key_path;
@@ -409,6 +418,7 @@ main(int argc, char **argv) {
         info.options |= LWS_SERVER_OPTION_REDIRECT_HTTP_TO_HTTPS;
 #endif
     }
+#endif
 
     lwsl_notice("ttyd %s (libwebsockets %s)\n", TTYD_VERSION, LWS_LIBRARY_VERSION);
     lwsl_notice("tty configuration:\n");
diff --git a/src/server.h b/src/server.h
old mode 100644
new mode 100755
index e1c6469..ffe10b2
--- a/src/server.h
+++ b/src/server.h
@@ -64,6 +64,8 @@
 // websocket url path
 #define WS_PATH "/ws"
 
+#undef SSL_SUPPORT
+
 #define BUF_SIZE 32768 // 32K
 
 extern volatile bool force_exit;
-- 
1.8.3.1

